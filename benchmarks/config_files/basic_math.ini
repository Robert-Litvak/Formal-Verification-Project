[add]
q1 = y >= 0
q2 = ret == x+y
# invariant_1 = (i >= 0) && (result + i == x+y)
# invariant_1 = true

[sub]
q1 = y >= 0
q2 = ret == x-y
# invariant_1 = (i >= 0) && (result - i == x-y)
# invariant_1 = true

[mul]
q1 = y >= 0
q2 = ret == x*y
# invariant_1 = (i >= 0) && (result + x*i == x*y)
# invariant_1 = (result + x*i == x*y)

[div]
q1 = x > 0 && y > 0
q2 = ret == x/y
# invariant_1 = (x > 0) && (y > 0) && (0 <= i && i <= x) && (result == x/y - i/y)
# invariant_1 = (result == x/y - i/y)

[mod]
q1 = x >= 0 && y > 0
q2 = (0 <= ret) && (ret < y) && exists(i, y*i == x - ret)
# invariant_1 = (x >= 0) && (y > 0) && (0 <= result) && (result <= x) && exists(j, (0 <= j) && (j <= x) && (y*j == x - result))
# invariant_1 = true

[abs]
q1 = true
q2 = !((!((x >= 0) && (ret == x))) && (!((x < 0) && (ret == -x))))

[fibonacci_1000_array]
q1 = true
q2 = (fib[0] == 1) && (fib[1] == 1) && forall(j, implies((1 < j) && (j < 1000), fib[j-2] + fib[j-1] == fib[j]))
# invariant_1 = (fib[0] == 1) && (fib[1] == 1) && (1 < i) && (i < 1000) && forall(k, implies((1 < k) && (k < i), fib[k-2] + fib[k-1] == fib[k]))
# invariant_1 = true
