temp_configuration.c  -->  temp_configuration.c.ast.json

VERIFYING USING SPACER WITH FIXED POINT
Verifying the function "array_index_value_id" from "benchmarks\json\other.c"
Fixed Point solver failed with error
The error:
b'spacer: quantifier in a recursive rule:\n<null>:\nquery!1(#3,#2,#1,#0) :- \n Invariant#2(#2,#1,#0),\n (>= (:var 3) 0),\n (< (:var 3) 100),\n (not (< (:var 1) 100)),\n (let ((a!1 (forall ((RUN$VAR_k3_7 Int))\n             (=> (and (>= RUN$VAR_k3_7 0) (< RUN$VAR_k3_7 (:var 2)))\n                 (= (select (:var 3) RUN$VAR_k3_7) RUN$VAR_k3_7)))))\n  (= a!1 true)),\n (<= (:var 1) 100),\n (>= (:var 1) 1),\n (not (= (select (:var 2) (:var 3)) (:var 3))).\n'


*****************************************************************************************************************
*****************************************************************************************************************
temp_configuration.c  -->  temp_configuration.c.ast.json

VERIFYING USING SPACER WITH MANUAL HORN CLAUSES
Verifying the function "array_index_value_id" from "benchmarks\json\other.c"
Adding rules:
ForAll([result, j, i],
       Implies(And(True, True, True, True),
               And(And(True, True),
                   ForAll(RUN$VAR_k2_0,
                          Implies(And(RUN$VAR_k2_0 >= 0,
                                      RUN$VAR_k2_0 < 0),
                                  result[RUN$VAR_k2_0] == 0)))))
#################################################################################################################
ForAll([result,
        j,
        i,
        result$IN$Invariant#1,
        j$IN$Invariant#1,
        i$IN$Invariant#1],
       Implies(And(True,
                   True,
                   True,
                   True,
                   And(result$IN$Invariant#1 == result,
                       j$IN$Invariant#1 == j,
                       i$IN$Invariant#1 == 0)),
               Invariant#1(result$IN$Invariant#1,
                           j$IN$Invariant#1,
                           i$IN$Invariant#1)))
#################################################################################################################
ForAll([result, j, i, TMP$ARR_0],
       Implies(And(Invariant#1(result, j, i),
                   And(And(i >= 0, i <= 100),
                       ForAll(RUN$VAR_k2_1,
                              Implies(And(RUN$VAR_k2_1 >= 0,
                                        RUN$VAR_k2_1 < i),
                                      result[RUN$VAR_k2_1] ==
                                      0))),
                   i < 100,
                   Store(result, i, 0) == TMP$ARR_0),
               And(And(i + 1 >= 0, i + 1 <= 100),
                   ForAll(RUN$VAR_k2_2,
                          Implies(And(RUN$VAR_k2_2 >= 0,
                                      RUN$VAR_k2_2 < i + 1),
                                  TMP$ARR_0[RUN$VAR_k2_2] ==
                                  0)))))
#################################################################################################################
ForAll([result,
        j,
        i,
        TMP$ARR_0,
        result$IN$Invariant#1,
        j$IN$Invariant#1,
        i$IN$Invariant#1],
       Implies(And(Invariant#1(result, j, i),
                   And(And(i >= 0, i <= 100),
                       ForAll(RUN$VAR_k2_1,
                              Implies(And(RUN$VAR_k2_1 >= 0,
                                        RUN$VAR_k2_1 < i),
                                      result[RUN$VAR_k2_1] ==
                                      0))),
                   i < 100,
                   Store(result, i, 0) == TMP$ARR_0,
                   And(result$IN$Invariant#1 == TMP$ARR_0,
                       j$IN$Invariant#1 == j,
                       i$IN$Invariant#1 == i + 1)),
               Invariant#1(result$IN$Invariant#1,
                           j$IN$Invariant#1,
                           i$IN$Invariant#1)))
#################################################################################################################
ForAll([result, j, i],
       Implies(And(Invariant#1(result, j, i),
                   And(And(i >= 0, i <= 100),
                       ForAll(RUN$VAR_k2_3,
                              Implies(And(RUN$VAR_k2_3 >= 0,
                                        RUN$VAR_k2_3 < i),
                                      result[RUN$VAR_k2_3] ==
                                      0))),
                   Not(i < 100),
                   True),
               And(And(True, True),
                   ForAll(RUN$VAR_k3_4,
                          Implies(And(RUN$VAR_k3_4 >= 0,
                                      RUN$VAR_k3_4 < 1),
                                  result[RUN$VAR_k3_4] ==
                                  RUN$VAR_k3_4)))))
#################################################################################################################
ForAll([result,
        j,
        i,
        result$IN$Invariant#2,
        j$IN$Invariant#2,
        i$IN$Invariant#2],
       Implies(And(Invariant#1(result, j, i),
                   And(And(i >= 0, i <= 100),
                       ForAll(RUN$VAR_k2_3,
                              Implies(And(RUN$VAR_k2_3 >= 0,
                                        RUN$VAR_k2_3 < i),
                                      result[RUN$VAR_k2_3] ==
                                      0))),
                   Not(i < 100),
                   True,
                   And(result$IN$Invariant#2 == result,
                       j$IN$Invariant#2 == 1,
                       i$IN$Invariant#2 == i)),
               Invariant#2(result$IN$Invariant#2,
                           j$IN$Invariant#2,
                           i$IN$Invariant#2)))
#################################################################################################################
ForAll([result, j, i, TMP$ARR_0],
       Implies(And(Invariant#2(result, j, i),
                   And(And(j >= 1, j <= 100),
                       ForAll(RUN$VAR_k3_5,
                              Implies(And(RUN$VAR_k3_5 >= 0,
                                        RUN$VAR_k3_5 < j),
                                      result[RUN$VAR_k3_5] ==
                                      RUN$VAR_k3_5))),
                   j < 100,
                   Store(result, j, result[j - 1] + 1) ==
                   TMP$ARR_0),
               And(And(j + 1 >= 1, j + 1 <= 100),
                   ForAll(RUN$VAR_k3_6,
                          Implies(And(RUN$VAR_k3_6 >= 0,
                                      RUN$VAR_k3_6 < j + 1),
                                  TMP$ARR_0[RUN$VAR_k3_6] ==
                                  RUN$VAR_k3_6)))))
#################################################################################################################
ForAll([result,
        j,
        i,
        TMP$ARR_0,
        result$IN$Invariant#2,
        j$IN$Invariant#2,
        i$IN$Invariant#2],
       Implies(And(Invariant#2(result, j, i),
                   And(And(j >= 1, j <= 100),
                       ForAll(RUN$VAR_k3_5,
                              Implies(And(RUN$VAR_k3_5 >= 0,
                                        RUN$VAR_k3_5 < j),
                                      result[RUN$VAR_k3_5] ==
                                      RUN$VAR_k3_5))),
                   j < 100,
                   Store(result, j, result[j - 1] + 1) ==
                   TMP$ARR_0,
                   And(result$IN$Invariant#2 == TMP$ARR_0,
                       j$IN$Invariant#2 == j + 1,
                       i$IN$Invariant#2 == i)),
               Invariant#2(result$IN$Invariant#2,
                           j$IN$Invariant#2,
                           i$IN$Invariant#2)))
#################################################################################################################
ForAll([result, j, i],
       Implies(And(Invariant#2(result, j, i),
                   And(And(j >= 1, j <= 100),
                       ForAll(RUN$VAR_k3_7,
                              Implies(And(RUN$VAR_k3_7 >= 0,
                                        RUN$VAR_k3_7 < j),
                                      result[RUN$VAR_k3_7] ==
                                      RUN$VAR_k3_7))),
                   Not(j < 100),
                   True),
               ForAll(RUN$VAR_k1_8,
                      Implies(And(RUN$VAR_k1_8 >= 0,
                                  RUN$VAR_k1_8 < 100),
                              result[RUN$VAR_k1_8] ==
                              RUN$VAR_k1_8))))
#################################################################################################################
FAILED TO PROVE USING HORN CLAUSES
Z3 returned unknown


*****************************************************************************************************************
*****************************************************************************************************************
temp_configuration.c  -->  temp_configuration.c.ast.json

VERIFYING PATHS
Verifying the function "array_index_value_id" from "benchmarks\json\other.c"
Found 5 paths:

***START***
***ASSIGNMENT***	i = 0
***CONDITION***	i < 100

R is:	True
Simplified R is:	True
T is:	{result: result, j: j, i: 0}
I_start(vars) is:	 True
Simplified I_start(vars) is:	 True
I_end(T(vars)) is:	 And(And(True, True),
    ForAll(RUN$VAR_k2_0,
           Implies(And(RUN$VAR_k2_0 >= 0, RUN$VAR_k2_0 < 0),
                   result[RUN$VAR_k2_0] == 0)))
Simplified I_end(T(vars)) is:	 ForAll(RUN$VAR_k2_0,
       Or(Not(And(RUN$VAR_k2_0 >= 0, Not(0 <= RUN$VAR_k2_0))),
          result[RUN$VAR_k2_0] == 0))
Array constraints: True
Proving formula:
Implies(And(True, True, True),
        And(And(True, True),
            ForAll(RUN$VAR_k2_0,
                   Implies(And(RUN$VAR_k2_0 >= 0,
                               RUN$VAR_k2_0 < 0),
                           result[RUN$VAR_k2_0] == 0))))
PROVED




***CONDITION***	i < 100
True
***ASSIGNMENT***	result[i] = 0
***ASSIGNMENT***	i = i + 1
***CONDITION***	i < 100

R is:	i < 100
Simplified R is:	Not(100 <= i)
T is:	{result: TMP$ARR_0, j: j, i: i + 1}
I_start(vars) is:	 And(And(i >= 0, i <= 100),
    ForAll(RUN$VAR_k2_1,
           Implies(And(RUN$VAR_k2_1 >= 0, RUN$VAR_k2_1 < i),
                   result[RUN$VAR_k2_1] == 0)))
Simplified I_start(vars) is:	 And(i >= 0,
    i <= 100,
    ForAll(RUN$VAR_k2_1,
           Or(Not(And(RUN$VAR_k2_1 >= 0,
                      Not(i <= RUN$VAR_k2_1))),
              result[RUN$VAR_k2_1] == 0)))
I_end(T(vars)) is:	 And(And(i + 1 >= 0, i + 1 <= 100),
    ForAll(RUN$VAR_k2_2,
           Implies(And(RUN$VAR_k2_2 >= 0,
                       RUN$VAR_k2_2 < i + 1),
                   TMP$ARR_0[RUN$VAR_k2_2] == 0)))
Simplified I_end(T(vars)) is:	 And(i >= -1,
    i <= 99,
    ForAll(RUN$VAR_k2_2,
           Or(Not(And(RUN$VAR_k2_2 >= 0,
                      Not(i <= -1 + RUN$VAR_k2_2))),
              TMP$ARR_0[RUN$VAR_k2_2] == 0)))
Array constraints: Store(result, i, 0) == TMP$ARR_0
Proving formula:
Implies(And(And(And(i >= 0, i <= 100),
                ForAll(RUN$VAR_k2_1,
                       Implies(And(RUN$VAR_k2_1 >= 0,
                                   RUN$VAR_k2_1 < i),
                               result[RUN$VAR_k2_1] == 0))),
            i < 100,
            Store(result, i, 0) == TMP$ARR_0),
        And(And(i + 1 >= 0, i + 1 <= 100),
            ForAll(RUN$VAR_k2_2,
                   Implies(And(RUN$VAR_k2_2 >= 0,
                               RUN$VAR_k2_2 < i + 1),
                           TMP$ARR_0[RUN$VAR_k2_2] == 0))))
PROVED




***CONDITION***	i < 100
False
***ASSIGNMENT***	j = 1
***CONDITION***	j < 100

R is:	Not(i < 100)
Simplified R is:	100 <= i
T is:	{result: result, j: 1, i: i}
I_start(vars) is:	 And(And(i >= 0, i <= 100),
    ForAll(RUN$VAR_k2_3,
           Implies(And(RUN$VAR_k2_3 >= 0, RUN$VAR_k2_3 < i),
                   result[RUN$VAR_k2_3] == 0)))
Simplified I_start(vars) is:	 And(i >= 0,
    i <= 100,
    ForAll(RUN$VAR_k2_3,
           Or(Not(And(RUN$VAR_k2_3 >= 0,
                      Not(i <= RUN$VAR_k2_3))),
              result[RUN$VAR_k2_3] == 0)))
I_end(T(vars)) is:	 And(And(True, True),
    ForAll(RUN$VAR_k3_4,
           Implies(And(RUN$VAR_k3_4 >= 0, RUN$VAR_k3_4 < 1),
                   result[RUN$VAR_k3_4] == RUN$VAR_k3_4)))
Simplified I_end(T(vars)) is:	 ForAll(RUN$VAR_k3_4,
       Or(Not(And(RUN$VAR_k3_4 >= 0, Not(1 <= RUN$VAR_k3_4))),
          result[RUN$VAR_k3_4] == RUN$VAR_k3_4))
Array constraints: True
Proving formula:
Implies(And(And(And(i >= 0, i <= 100),
                ForAll(RUN$VAR_k2_3,
                       Implies(And(RUN$VAR_k2_3 >= 0,
                                   RUN$VAR_k2_3 < i),
                               result[RUN$VAR_k2_3] == 0))),
            Not(i < 100),
            True),
        And(And(True, True),
            ForAll(RUN$VAR_k3_4,
                   Implies(And(RUN$VAR_k3_4 >= 0,
                               RUN$VAR_k3_4 < 1),
                           result[RUN$VAR_k3_4] ==
                           RUN$VAR_k3_4))))
PROVED




***CONDITION***	j < 100
True
***ASSIGNMENT***	result[j] = result[j - 1] + 1
***ASSIGNMENT***	j = j + 1
***CONDITION***	j < 100

R is:	j < 100
Simplified R is:	Not(100 <= j)
T is:	{result: TMP$ARR_0, j: j + 1, i: i}
I_start(vars) is:	 And(And(j >= 1, j <= 100),
    ForAll(RUN$VAR_k3_5,
           Implies(And(RUN$VAR_k3_5 >= 0, RUN$VAR_k3_5 < j),
                   result[RUN$VAR_k3_5] == RUN$VAR_k3_5)))
Simplified I_start(vars) is:	 And(j >= 1,
    j <= 100,
    ForAll(RUN$VAR_k3_5,
           Or(Not(And(RUN$VAR_k3_5 >= 0,
                      Not(j <= RUN$VAR_k3_5))),
              result[RUN$VAR_k3_5] == RUN$VAR_k3_5)))
I_end(T(vars)) is:	 And(And(j + 1 >= 1, j + 1 <= 100),
    ForAll(RUN$VAR_k3_6,
           Implies(And(RUN$VAR_k3_6 >= 0,
                       RUN$VAR_k3_6 < j + 1),
                   TMP$ARR_0[RUN$VAR_k3_6] == RUN$VAR_k3_6)))
Simplified I_end(T(vars)) is:	 And(j >= 0,
    j <= 99,
    ForAll(RUN$VAR_k3_6,
           Or(Not(And(RUN$VAR_k3_6 >= 0,
                      Not(j <= -1 + RUN$VAR_k3_6))),
              TMP$ARR_0[RUN$VAR_k3_6] == RUN$VAR_k3_6)))
Array constraints: Store(result, j, result[j - 1] + 1) == TMP$ARR_0
Proving formula:
Implies(And(And(And(j >= 1, j <= 100),
                ForAll(RUN$VAR_k3_5,
                       Implies(And(RUN$VAR_k3_5 >= 0,
                                   RUN$VAR_k3_5 < j),
                               result[RUN$VAR_k3_5] ==
                               RUN$VAR_k3_5))),
            j < 100,
            Store(result, j, result[j - 1] + 1) == TMP$ARR_0),
        And(And(j + 1 >= 1, j + 1 <= 100),
            ForAll(RUN$VAR_k3_6,
                   Implies(And(RUN$VAR_k3_6 >= 0,
                               RUN$VAR_k3_6 < j + 1),
                           TMP$ARR_0[RUN$VAR_k3_6] ==
                           RUN$VAR_k3_6))))
PROVED




***CONDITION***	j < 100
False
***HALT***

R is:	Not(j < 100)
Simplified R is:	100 <= j
T is:	{result: result, j: j, i: i}
I_start(vars) is:	 And(And(j >= 1, j <= 100),
    ForAll(RUN$VAR_k3_7,
           Implies(And(RUN$VAR_k3_7 >= 0, RUN$VAR_k3_7 < j),
                   result[RUN$VAR_k3_7] == RUN$VAR_k3_7)))
Simplified I_start(vars) is:	 And(j >= 1,
    j <= 100,
    ForAll(RUN$VAR_k3_7,
           Or(Not(And(RUN$VAR_k3_7 >= 0,
                      Not(j <= RUN$VAR_k3_7))),
              result[RUN$VAR_k3_7] == RUN$VAR_k3_7)))
I_end(T(vars)) is:	 ForAll(RUN$VAR_k1_8,
       Implies(And(RUN$VAR_k1_8 >= 0, RUN$VAR_k1_8 < 100),
               result[RUN$VAR_k1_8] == RUN$VAR_k1_8))
Simplified I_end(T(vars)) is:	 ForAll(RUN$VAR_k1_8,
       Or(Not(And(RUN$VAR_k1_8 >= 0,
                  Not(100 <= RUN$VAR_k1_8))),
          result[RUN$VAR_k1_8] == RUN$VAR_k1_8))
Array constraints: True
Proving formula:
Implies(And(And(And(j >= 1, j <= 100),
                ForAll(RUN$VAR_k3_7,
                       Implies(And(RUN$VAR_k3_7 >= 0,
                                   RUN$VAR_k3_7 < j),
                               result[RUN$VAR_k3_7] ==
                               RUN$VAR_k3_7))),
            Not(j < 100),
            True),
        ForAll(RUN$VAR_k1_8,
               Implies(And(RUN$VAR_k1_8 >= 0,
                           RUN$VAR_k1_8 < 100),
                       result[RUN$VAR_k1_8] == RUN$VAR_k1_8)))
PROVED



PROGRAM IS SUCCESSFULLY PROVED
